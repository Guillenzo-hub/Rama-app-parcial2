# Conexión a base de datos usando variables de entorno
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
server.port=${PORT:8080}

# Configuración JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# OAuth2 Auth0 config desde Render
spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.provider=auth0
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.auth0.issuer-uri=https://${AUTH0_DOMAIN}/

# Redirección al dashboard después del login exitoso
spring.security.oauth2.client.client-name=auth0
server.servlet.context-path=

# Redirigir a dashboard después del login
spring.security.oauth2.client.registration.auth0.scope=openid, profile, email

# Redirigir luego del login
spring.security.oauth2.client.registration.auth0.client-name=auth0
spring.security.oauth2.client.registration.auth0.redirect-uri={baseUrl}/login/oauth2/code/auth0
