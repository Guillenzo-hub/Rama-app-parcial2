# ======================= BASE DE DATOS ===========================
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
server.port=${PORT:10000}

# ======================= JPA / HIBERNATE =========================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ======================= AUTH0 / OAUTH2 ==========================
spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code
# ✅ CORREGIDO: URL dinámica en lugar de hardcodeada
spring.security.oauth2.client.registration.auth0.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.auth0.provider=auth0

spring.security.oauth2.client.provider.auth0.issuer-uri=https://${AUTH0_DOMAIN}/

# ======================= VAADIN ==========================
vaadin.productionMode=true
vaadin.push.enabled=false
# ✅ CORREGIDO: Cambiar URL mapping para evitar conflictos con OAuth2
vaadin.urlMapping=/app/*
vaadin.servlet.asyncSupported=true
vaadin.whitelisted-packages=com.example.rama